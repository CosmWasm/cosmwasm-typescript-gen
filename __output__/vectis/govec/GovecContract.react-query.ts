/**
* This file was automatically generated by @cosmwasm/ts-codegen@latest.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { CanExecuteRelayResponse, CosmosMsgForEmpty, BankMsg, Uint128, StakingMsg, DistributionMsg, WasmMsg, Binary, Coin, Empty, ExecuteMsgForEmpty, Addr, RelayTransaction, Guardians, MultiSig, InfoResponse, ContractVersion, InstantiateMsg, CreateWalletMsg, QueryMsg, Uint64 } from "./GovecContract";
import { GovecQueryClient } from "./GovecContract";
export interface GovecCanExecuteRelayQuery {
  client: GovecQueryClient;
  options?: UseQueryOptions<CanExecuteRelayResponse, Error, CanExecuteRelayResponse, (string | undefined)[]>;
  args: {
    sender: string;
  };
}
export function useGovecCanExecuteRelayQuery({
  client,
  args,
  options
}: GovecCanExecuteRelayQuery) {
  return useQuery<CanExecuteRelayResponse, Error, CanExecuteRelayResponse, (string | undefined)[]>(["govecCanExecuteRelay", client.contractAddress, JSON.stringify(args)], () => client.canExecuteRelay({
    sender: args.sender
  }), options);
}
export interface GovecInfoQuery {
  client: GovecQueryClient;
  options?: UseQueryOptions<InfoResponse, Error, InfoResponse, (string | undefined)[]>;
}
export function useGovecInfoQuery({
  client,
  options
}: GovecInfoQuery) {
  return useQuery<InfoResponse, Error, InfoResponse, (string | undefined)[]>(["govecInfo", client.contractAddress], () => client.info(), options);
}