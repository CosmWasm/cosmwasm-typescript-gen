/**
* This file was automatically generated by @cosmwasm/ts-codegen@latest.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { InstantiateMsg, Member, ExecuteMsg, QueryMsg, QueryResponse, AdminResponse, TotalWeightResponse, MemberListResponse, MemberResponse, HooksResponse } from "./CW4GroupContract";
import { CW4GroupQueryClient } from "./CW4GroupContract";
export interface CW4GroupHooksQuery {
  client: CW4GroupQueryClient;
  options?: UseQueryOptions<HooksResponse, Error, HooksResponse, (string | undefined)[]>;
}
export function useCW4GroupHooksQuery({
  client,
  options
}: CW4GroupHooksQuery) {
  return useQuery<HooksResponse, Error, HooksResponse, (string | undefined)[]>(["cW4GroupHooks", client.contractAddress], () => client.hooks(), options);
}
export interface CW4GroupMemberQuery {
  client: CW4GroupQueryClient;
  options?: UseQueryOptions<MemberResponse, Error, MemberResponse, (string | undefined)[]>;
  args: {
    addr: string;
    atHeight?: number;
  };
}
export function useCW4GroupMemberQuery({
  client,
  args,
  options
}: CW4GroupMemberQuery) {
  return useQuery<MemberResponse, Error, MemberResponse, (string | undefined)[]>(["cW4GroupMember", client.contractAddress, JSON.stringify(args)], () => client.member({
    addr: args.addr,
    atHeight: args.atHeight
  }), options);
}
export interface CW4GroupListMembersQuery {
  client: CW4GroupQueryClient;
  options?: UseQueryOptions<ListMembersResponse, Error, ListMembersResponse, (string | undefined)[]>;
  args: {
    limit?: number;
    startAfter?: string;
  };
}
export function useCW4GroupListMembersQuery({
  client,
  args,
  options
}: CW4GroupListMembersQuery) {
  return useQuery<ListMembersResponse, Error, ListMembersResponse, (string | undefined)[]>(["cW4GroupListMembers", client.contractAddress, JSON.stringify(args)], () => client.listMembers({
    limit: args.limit,
    startAfter: args.startAfter
  }), options);
}
export interface CW4GroupTotalWeightQuery {
  client: CW4GroupQueryClient;
  options?: UseQueryOptions<TotalWeightResponse, Error, TotalWeightResponse, (string | undefined)[]>;
}
export function useCW4GroupTotalWeightQuery({
  client,
  options
}: CW4GroupTotalWeightQuery) {
  return useQuery<TotalWeightResponse, Error, TotalWeightResponse, (string | undefined)[]>(["cW4GroupTotalWeight", client.contractAddress], () => client.totalWeight(), options);
}
export interface CW4GroupAdminQuery {
  client: CW4GroupQueryClient;
  options?: UseQueryOptions<AdminResponse, Error, AdminResponse, (string | undefined)[]>;
}
export function useCW4GroupAdminQuery({
  client,
  options
}: CW4GroupAdminQuery) {
  return useQuery<AdminResponse, Error, AdminResponse, (string | undefined)[]>(["cW4GroupAdmin", client.contractAddress], () => client.admin(), options);
}